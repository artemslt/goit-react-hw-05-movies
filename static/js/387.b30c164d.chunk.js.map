{"version":3,"file":"static/js/387.b30c164d.chunk.js","mappings":"6TAMaA,EAAaC,EAAAA,GAAAA,OAAa,CACrCC,QAHe,+BAIfC,OAAQ,CAAEC,QALI,mCAKcC,KAAM,OAG7B,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,gGAEeL,EAAWO,IAAI,uBAAwB,CACvDJ,OAAQ,CAAEE,KAAMA,KAHf,cAEGG,EAFH,yBAMIA,EAAIC,MANR,iCAQHC,EAAAA,EAAAA,MARG,gFAYA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA4BC,EAAaP,GAAzC,gGAEeL,EAAWO,IAAI,gBAAiB,CAChDJ,OAAQ,CAAEU,MAAOD,EAAaP,KAAMA,KAHnC,cAEGG,EAFH,yBAKIA,EAAIC,MALR,iCAOHC,EAAAA,EAAAA,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEef,EAAWO,IAAX,iBAAyBQ,IAFxC,cAEGP,EAFH,yBAGIA,EAAIC,MAHR,iCAKHC,EAAAA,EAAAA,MALG,gFASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gGAEef,EAAWO,IAAX,iBAAyBQ,EAAzB,aAFf,cAEGP,EAFH,yBAGIA,EAAIC,MAHR,iCAKHC,EAAAA,EAAAA,MALG,gFASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,gGAEef,EAAWO,IAAX,iBAAyBQ,EAAzB,aAFf,cAEGP,EAFH,yBAGIA,EAAIC,MAHR,iCAKHC,EAAAA,EAAAA,MALG,gF,0JClDMQ,EAAOC,EAAAA,GAAAA,GAAH,uDAKJC,EAAOD,EAAAA,GAAAA,GAAH,8K,mBCmCjB,EAjCgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQR,GAAOS,EAAAA,EAAAA,MAAPT,GAcR,OAZAU,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAgBF,GACbW,MAAK,SAAAlB,GACuB,IAAvBA,EAAImB,QAAQC,OAIhBL,EAAWf,EAAImB,UAHbE,EAAAA,EAAAA,KAIH,IACAC,OAAM,kBAAMpB,EAAAA,EAAAA,KAAN,GACV,GAAE,CAACK,KAGF,4BACE,SAACG,EAAD,UACGI,EAAQS,KAAI,SAAAC,GACX,OACE,UAACZ,EAAD,YACE,wBAAKY,EAAMC,UACX,uBAAID,EAAME,YAFDF,EAAMjB,GAKpB,OAEH,SAAC,KAAD,MAGL,C,8ICtCYc,EAAiB,WAC5BM,EAAAA,GAAAA,QAAc,iCAAkC,CAC9CC,SAAUD,EAAAA,GAAAA,SAAAA,WAEb,EACYE,EAAc,SAAAC,GACzBH,EAAAA,GAAAA,KAAA,kBAAsBG,EAAtB,WAAuC,CACrCF,SAAUD,EAAAA,GAAAA,SAAAA,WAEb,EAEYzB,EAAe,WAC1ByB,EAAAA,GAAAA,MAAY,4BAA6B,CACvCC,SAAUD,EAAAA,GAAAA,SAAAA,WAEb,EAEYI,EAAiB,WAC5BJ,EAAAA,GAAAA,QAAc,kCAAmC,CAC/CC,SAAUD,EAAAA,GAAAA,SAAAA,WAEb,C","sources":["API/api.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/helpers/Messages.jsx"],"sourcesContent":["import axios from 'axios';\nimport { errorMessage } from '../components/helpers/Messages';\n\nconst API_KEY = '93d454aeb43c6f394ac0bb2f4b913efd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const moviedbApi = axios.create({\n  baseURL: BASE_URL,\n  params: { api_key: API_KEY, page: '1' },\n});\n\nexport async function trendMovies(page) {\n  try {\n    const res = await moviedbApi.get('/trending/movie/week', {\n      params: { page: page },\n    });\n\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function searchMovies(searchQuery, page) {\n  try {\n    const res = await moviedbApi.get('/search/movie', {\n      params: { query: searchQuery, page: page },\n    });\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function GetMovieDetails(id) {\n  try {\n    const res = await moviedbApi.get(`/movie/${id}`);\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function GetMovieCast(id) {\n  try {\n    const res = await moviedbApi.get(`/movie/${id}/credits`);\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function GetMovieReviews(id) {\n  try {\n    const res = await moviedbApi.get(`/movie/${id}/reviews`);\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  gap: 8px;\n`;\n\nexport const Item = styled.li`\n  display: grid;\n  gap: 4px;\n  padding: 8px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  box-shadow: 4px 4px 8px 0px rgba(0, 0, 0, 0.41);\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { GetMovieReviews } from '../../API/api';\nimport { List, Item } from './Reviews.styled';\nimport { notFindMessage, errorMessage } from '../helpers/Messages';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    GetMovieReviews(id)\n      .then(res => {\n        if (res.results.length === 0) {\n          notFindMessage();\n          return;\n        }\n        setReviews(res.results);\n      })\n      .catch(() => errorMessage());\n  }, [id]);\n\n  return (\n    <div>\n      <List>\n        {reviews.map(actor => {\n          return (\n            <Item key={actor.id}>\n              <h3>{actor.author}</h3>\n              <p>{actor.content}</p>\n            </Item>\n          );\n        })}\n      </List>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Reviews;\n","import { toast } from 'react-toastify';\n\nexport const notFindMessage = () => {\n  toast.warning(\"Sorry, we didn't find matches.\", {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\nexport const findMessage = number => {\n  toast.info(`We find ${number} movies`, {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nexport const errorMessage = () => {\n  toast.error('Sorry something go wrong!', {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nexport const noQueryMessage = () => {\n  toast.warning('Enter a new serch word, please!', {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n"],"names":["moviedbApi","axios","baseURL","params","api_key","page","trendMovies","get","res","data","errorMessage","searchMovies","searchQuery","query","GetMovieDetails","id","GetMovieCast","GetMovieReviews","List","styled","Item","useState","reviews","setReviews","useParams","useEffect","then","results","length","notFindMessage","catch","map","actor","author","content","toast","position","findMessage","number","noQueryMessage"],"sourceRoot":""}