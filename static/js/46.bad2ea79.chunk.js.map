{"version":3,"file":"static/js/46.bad2ea79.chunk.js","mappings":"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","sources":["API/api.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/helpers/Messages.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/LoadMoreBtn/LoadMoreBtn.styled.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { errorMessage } from '../components/helpers/Messages';\n\nconst API_KEY = '93d454aeb43c6f394ac0bb2f4b913efd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const moviedbApi = axios.create({\n  baseURL: BASE_URL,\n  params: { api_key: API_KEY, page: '1' },\n});\n\nexport async function trendMovies(page) {\n  try {\n    const res = await moviedbApi.get('/trending/movie/week', {\n      params: { page: page },\n    });\n\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function searchMovies(searchQuery, page) {\n  try {\n    const res = await moviedbApi.get('/search/movie', {\n      params: { query: searchQuery, page: page },\n    });\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function GetMovieDetails(id) {\n  try {\n    const res = await moviedbApi.get(`/movie/${id}`);\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function GetMovieCast(id) {\n  try {\n    const res = await moviedbApi.get(`/movie/${id}/credits`);\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function GetMovieReviews(id) {\n  try {\n    const res = await moviedbApi.get(`/movie/${id}/reviews`);\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n","import styled from 'styled-components';\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: grid;\n  gap: 8px;\n  padding: 4px;\n  text-align: center;\n  align-items: center;\n\n  color: white;\n  opacity: 0;\n  transform: translateY(100%);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  gap: 16px;\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n\n    position: absolute;\n    display: block;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n    transform: translateY(100%);\n    opacity: 0;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 16px;\n\n  border: 1px solid grey;\n  border-radius: 4px;\n  box-shadow: 4px 4px 8px 0px rgba(0, 0, 0, 0.41);\n\n  &:hover ${Thumb}:before, &:hover ${InfoWrapper} {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport imageNotFaund from '../helpers/images/imgNotFound.jpg';\n\nimport { List, ListItem, InfoWrapper, Thumb } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path, overview }) => {\n          return (\n            <ListItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Thumb>\n                  <img\n                    src={\n                      poster_path === null\n                        ? imageNotFaund\n                        : `https://image.tmdb.org/t/p/w500${poster_path}`\n                    }\n                    alt={title}\n                  />\n                  <InfoWrapper>\n                    <h3>{title}</h3>\n                    <p>{overview}</p>\n                  </InfoWrapper>\n                </Thumb>\n              </Link>\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n      overview: PropTypes.string,\n    })\n  ),\n};\n","import { toast } from 'react-toastify';\n\nexport const notFindMessage = () => {\n  toast.warning(\"Sorry, we didn't find matches.\", {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\nexport const findMessage = number => {\n  toast.info(`We find ${number} movies`, {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nexport const errorMessage = () => {\n  toast.error('Sorry something go wrong!', {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nexport const noQueryMessage = () => {\n  toast.warning('Enter a new serch word, please!', {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n","import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  margin: 16px auto;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 24px;\n  overflow: hidden;\n  box-shadow: 4px 4px 8px 0px rgba(0, 0, 0, 0.41);\n  :focus-within {\n    box-shadow: 4px 4px 8px 0px rgba(249, 105, 14, 1);\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 32px;\n  height: 32px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  border: none;\n  outline: none;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Icon = styled(FcSearch)`\n  width: 16px;\n  height: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { Form, Input, Button, Icon } from './SearchForm.styled';\n\nexport const SearchForm = ({ handlQuery }) => {\n  return (\n    <Form onSubmit={handlQuery}>\n      <Input type=\"text\" name=\"search\" autoComplete=\"off\" autoFocus />\n      <Button type=\"submit\">\n        <Icon />\n      </Button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  handlQuery: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const LoadMoreBtn = styled.button`\n  margin: 16px auto 0;\n  padding: 8px 16px;\n  border-radius: 2px;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: black;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  width: fit-content;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { searchMovies } from '../API/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { SearchForm } from '../components/SearchForm/SearchForm';\nimport { Loader } from '../components/Loader/Loader';\nimport { LoadMoreBtn } from '../components/LoadMoreBtn/LoadMoreBtn.styled';\nimport {\n  findMessage,\n  notFindMessage,\n  errorMessage,\n  noQueryMessage,\n} from '../components/helpers/Messages';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState(Status.IDLE);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const moviesQuary = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (moviesQuary === '') {\n      return;\n    }\n    if (searchParams && status === Status.IDLE) {\n      setStatus(Status.PENDING);\n      searchMovies(moviesQuary, page)\n        .then(res => {\n          if (res.results.totalHits === 0) {\n            notFindMessage();\n          }\n          setMovies([...movies, ...res.results]);\n          findMessage(res.total_results);\n          setTotalPages(Math.ceil(res.total_results / 20));\n        })\n        .catch(() => {\n          setStatus(Status.REJECTED);\n          errorMessage();\n        })\n        .finally(setStatus(Status.RESOLVED));\n    }\n  }, [movies, moviesQuary, page, searchParams, status]);\n\n  const handlQuery = e => {\n    e.preventDefault();\n    const query = e.currentTarget.elements.search.value;\n    if (query === '') {\n      noQueryMessage();\n      return;\n    }\n    if (query === moviesQuary) {\n      noQueryMessage();\n      return;\n    }\n\n    const nextParams = query !== '' ? { query } : {};\n\n    setSearchParams(nextParams);\n    setPage(1);\n    setTotalPages(1);\n    setMovies([]);\n    setStatus(Status.IDLE);\n    e.target.reset();\n  };\n\n  const loadMore = () => {\n    setPage(page + 1);\n    setStatus(Status.IDLE);\n  };\n\n  return (\n    <main>\n      <SearchForm handlQuery={handlQuery} />\n      {status === Status.PENDING && <Loader isLoading={true} />}\n      {searchParams && <MoviesList movies={movies} />}\n      {totalPages !== 0 && page !== totalPages && (\n        <LoadMoreBtn onClick={loadMore}>Load more</LoadMoreBtn>\n      )}\n      <ToastContainer />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["moviedbApi","axios","baseURL","params","api_key","page","trendMovies","get","res","data","errorMessage","searchMovies","searchQuery","query","GetMovieDetails","id","GetMovieCast","GetMovieReviews","InfoWrapper","styled","List","Thumb","ListItem","MoviesList","movies","location","useLocation","map","title","poster_path","overview","to","state","from","src","imageNotFaund","alt","notFindMessage","toast","position","findMessage","number","noQueryMessage","Form","Button","Input","Icon","FcSearch","SearchForm","handlQuery","onSubmit","type","name","autoComplete","autoFocus","LoadMoreBtn","Status","useState","setMovies","useSearchParams","searchParams","setSearchParams","status","setStatus","setPage","totalPages","setTotalPages","moviesQuary","useEffect","then","results","totalHits","total_results","Math","ceil","catch","finally","e","preventDefault","currentTarget","elements","search","value","target","reset","Loader","isLoading","onClick"],"sourceRoot":""}