{"version":3,"file":"static/js/415.f7ad05c3.chunk.js","mappings":"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","sources":["API/api.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/helpers/Messages.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport { errorMessage } from '../components/helpers/Messages';\n\nconst API_KEY = '93d454aeb43c6f394ac0bb2f4b913efd';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const moviedbApi = axios.create({\n  baseURL: BASE_URL,\n  params: { api_key: API_KEY, page: '1' },\n});\n\nexport async function trendMovies(page) {\n  try {\n    const res = await moviedbApi.get('/trending/movie/week', {\n      params: { page: page },\n    });\n\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function searchMovies(searchQuery, page) {\n  try {\n    const res = await moviedbApi.get('/search/movie', {\n      params: { query: searchQuery, page: page },\n    });\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function GetMovieDetails(id) {\n  try {\n    const res = await moviedbApi.get(`/movie/${id}`);\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function GetMovieCast(id) {\n  try {\n    const res = await moviedbApi.get(`/movie/${id}/credits`);\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n\nexport async function GetMovieReviews(id) {\n  try {\n    const res = await moviedbApi.get(`/movie/${id}/reviews`);\n    return res.data;\n  } catch (error) {\n    errorMessage();\n  }\n}\n","import styled from 'styled-components';\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: grid;\n  gap: 8px;\n  padding: 4px;\n  text-align: center;\n  align-items: center;\n\n  color: white;\n  opacity: 0;\n  transform: translateY(100%);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  gap: 16px;\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n\n    position: absolute;\n    display: block;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n    transform: translateY(100%);\n    opacity: 0;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 16px;\n\n  border: 1px solid grey;\n  border-radius: 4px;\n  box-shadow: 4px 4px 8px 0px rgba(0, 0, 0, 0.41);\n\n  &:hover ${Thumb}:before, &:hover ${InfoWrapper} {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport imageNotFaund from '../helpers/images/imgNotFound.jpg';\n\nimport { List, ListItem, InfoWrapper, Thumb } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path, overview }) => {\n          return (\n            <ListItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Thumb>\n                  <img\n                    src={\n                      poster_path === null\n                        ? imageNotFaund\n                        : `https://image.tmdb.org/t/p/w500${poster_path}`\n                    }\n                    alt={title}\n                  />\n                  <InfoWrapper>\n                    <h3>{title}</h3>\n                    <p>{overview}</p>\n                  </InfoWrapper>\n                </Thumb>\n              </Link>\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n      overview: PropTypes.string,\n    })\n  ),\n};\n","import { toast } from 'react-toastify';\n\nexport const notFindMessage = () => {\n  toast.warning(\"Sorry, we didn't find matches.\", {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\nexport const findMessage = number => {\n  toast.info(`We find ${number} movies`, {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nexport const errorMessage = () => {\n  toast.error('Sorry something go wrong!', {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nexport const noQueryMessage = () => {\n  toast.warning('Enter a new serch word, please!', {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n","import { trendMovies } from '../API/api';\n\nimport { useState, useEffect } from 'react';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { Loader } from '../components/Loader/Loader';\nimport { errorMessage } from '../components/helpers/Messages';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    trendMovies()\n      .then(res => {\n        setTrends(res.results);\n      })\n      .catch(() => {\n        setStatus(Status.REJECTED);\n        errorMessage();\n      })\n      .finally(setStatus(Status.RESOLVED));\n  }, []);\n\n  return (\n    <main>\n      {status === Status.PENDING && <Loader isLoading={true} />}\n      <MoviesList movies={trends} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["moviedbApi","axios","baseURL","params","api_key","page","trendMovies","get","res","data","errorMessage","searchMovies","searchQuery","query","GetMovieDetails","id","GetMovieCast","GetMovieReviews","InfoWrapper","styled","List","Thumb","ListItem","MoviesList","movies","location","useLocation","map","title","poster_path","overview","to","state","from","src","imageNotFaund","alt","notFindMessage","toast","position","findMessage","number","noQueryMessage","Status","useState","trends","setTrends","status","setStatus","useEffect","then","results","catch","finally","isLoading"],"sourceRoot":""}